spring.application.name=xiaozhi-ai

# web服务访问端口
server.port=8080

# 1、gpt-4o-mini，默认的langchain4j测试模型
#langchain4j.open-ai.chat-model.baseUrl=http://langchain4j.dev/demo/openai/v1
#langchain4j.open-ai.chat-model.api-key=demo
#langchain4j.open-ai.chat-model.model-name=gpt-4o-mini

# 2、deepseek模型
#langchain4j.open-ai.chat-model.baseUrl=https://api.deepseek.com/
#langchain4j.open-ai.chat-model.api-key=${DEEP_SEEK_API_KEY}
## DeepSeek-V3
##langchain4j.open-ai.chat-model.model-name=deepseek-chat
## DeepSeek-R1 推理模型
#langchain4j.open-ai.chat-model.model-name=deepseek-reasoner
## 应用程序发送给大模型的请求和响应日志
#langchain4j.open-ai.chat-model.log-requests=true
#langchain4j.open-ai.chat-model.log-responses=true

# 3、ollama本地模型
langchain4j.ollama.chat-model.base-url=http://localhost:11434
langchain4j.ollama.chat-model.model-name=deepseek-r1:8b
langchain4j.ollama.chat-model.temperature=0.8
langchain4j.ollama.chat-model.timeout=PT60S
langchain4j.ollama.chat-model.log-requests=true
langchain4j.ollama.chat-model.log-responses=true

# 4、阿里百炼平台，目前暂无log配置
langchain4j.community.dashscope.chat-model.api-key=${DASH_SCOPE_API_KEY}
langchain4j.community.dashscope.chat-model.model-name=qwen-max

# 5、集成百炼-deepseek，与上面的官网版deepseek相比，只是value更换了，比如url\key\model-name，测试方法还是用一个
langchain4j.open-ai.chat-model.base-url=https://dashscope.aliyuncs.com/compatible-mode/v1
langchain4j.open-ai.chat-model.api-key=${DASH_SCOPE_API_KEY}
langchain4j.open-ai.chat-model.model-name=deepseek-v3
#langchain4j.open-ai.chat-model.model-name=deepseek-r1
#温度系数：取值范围通常在 0 到 1 之间。值越高，模型的输出越随机、富有创造性；
# 值越低，输出越确定、保守。这里设置为 0.9，意味着模型会有一定的随机性，生成的回复可能会比较多样化。
langchain4j.open-ai.chat-model.temperature=0.9

# 启用日志debug级别
#logging.level.root=debug 使用的qianwen大模型没有debug日志输出，所以还是调整为info级别
logging.level.root=info

# MongoDB连接配置
spring.data.mongodb.uri=mongodb://localhost:27017/chat_memory_db
# MySQL数据源配置
spring.datasource.url=jdbc:mysql://localhost:3306/guiguxiaozhi?useUnicode=true&characterEncoding=UTF-8&serverTimezone=Asia/Shanghai&useSSL=false
spring.datasource.username=root
spring.datasource.password=123456
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
# 开启 SQL 日志打印
mybatis-plus.configuration.log-impl=org.apache.ibatis.logging.stdout.StdOutImpl

# 暴露指定的Actuator端点，比如 health 和 metrics
#management.endpoints.web.exposure.include=health,metrics
# 暴露所有Actuator端点
management.endpoints.web.exposure.include=*
